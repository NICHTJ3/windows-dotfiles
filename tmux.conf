# Set prefix to space.
unbind C-b
set -g prefix C-space
set -g prefix2 C-a

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
        | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$' \
        || vim-tmux-navigator-is-vim.sh #{pane_tty}"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R

# Bindings:
# - to see current bindings:
#   list-keys -t {vi,emacs}-{edit,choice,copy}

# Open new/split panes with the path of the current pane.
unbind c
bind c new-window -c '#{pane_current_path}'
unbind %
bind % split-window -h -c '#{pane_current_path}'
unbind '"'
bind '"' split-window -v -c '#{pane_current_path}'

# New split key bindings
unbind '\'
bind '\' split-window -h -c '#{pane_current_path}'
unbind '|'
bind '|' split-window -h -c '#{pane_current_path}'
unbind '-'
bind '-' split-window -v -c '#{pane_current_path}'

# Random stuff.
setw -g xterm-keys on
set -g history-limit 262144
set -g default-terminal "xterm-256color-italic"
# set -ga terminal-overrides "rxvt-unicode-256color" # 24 bit color
set -ga terminal-overrides ",xterm-256color:Tc" # Proper nvim/tmux/base16 colors


# Bingings I like.
bind s choose-tree -GNsZ #Session list with no preview
bind Q kill-window

# Vim-like key bindings for pane navigation (default uses cursor keys).
unbind h
bind h select-pane -L
unbind j
bind j select-pane -D
unbind k
bind k select-pane -U
unbind l # normally used for last-window
bind l select-pane -R

# vim like visual mode bindings.
setw -g mode-keys vi
bind-key -T copy-mode-vi 'v' send-keys -X begin-selection
bind-key -T copy-mode-vi Escape send-keys -X cancel

# Resize panes (mouse also works).
unbind Left
bind -r Left resize-pane -L 5
unbind Right
bind -r Right resize-pane -R 5
unbind Down
bind -r Down resize-pane -D 5
unbind Up
bind -r Up resize-pane -U 5

# Fast toggle last window (normally prefix-l).
bind ^a last-window

# Send command to all panes view
bind C-e command-prompt -p "Command:" \
         "run \"tmux list-panes -s -F '.##{pane_index}' \
                | xargs -I PANE tmux send-keys -t PANE '%1' Enter\""

# Status bar.
has_powerline="test -f $HOME/.local/lib/python3.7/site-packages/powerline/bindings/tmux/powerline.conf"

set -w -g window-status-current-style bg=red,fg=white # Highlight active window.
# set -g status-position top
set -g status-interval 60 # Default is 15.
set -g status-left-length 40

# Powerline prompt
if-shell "$has_powerline" " \
  run-shell \"powerline-daemon -q\";\
  source \"$HOME/.local/lib/python3.7/site-packages/powerline/bindings/tmux/powerline.conf\";"

## Fall back prompt
if-shell "! $has_powerline" " \
 set -g status-bg default; \
 set -g status-fg white; \
 set -g status-left '#[fg=blue]#S ï˜¶ '; \
 set -g status-right '#[fg=blue]$USER@#h #[fg=red]%l:%M %p #{battery_percentage}'; \
 set -g status-justify 'left';"

# Border theme
# set -g pane-active-border-style bg="#383830",fg="#383830"
# set -g pane-border-style bg="#383830",fg="#383830"

# Focus theme change.
#set inactive/active window styles
# set -g window-style 'fg=colour247,bg=#383830'
# set -g window-active-style 'fg=colour250,bg=black'

# Automatically renumber window numbers on closing a pane (tmux >= 1.7).
set -g renumber-windows on

# Mouse can be used to select panes, select windows (by clicking on the status
# bar), resize panes. For default bindings see `tmux list-keys` and `tmux
# list-keys -t vi-copy`.
set -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M

# Slightly more useful width in "main-vertical" layout; enough room for 3-digit
# line number gutter in Vim + 80 columns of text + 1 column breathing room
# (default looks to be about 79).
set -w -g main-pane-width 85

# Start window and pane numbering at 1, (0 is too hard to reach).
set -g base-index 1
set -g pane-base-index 1

# Don't wait for an escape sequence after seeing C-a.
set -s escape-time 0

# Dynamically update iTerm tab and window titles.
set -g set-titles on

# Needed as on tmux 1.9 and up (defaults to off).
# Added in tmux commit c7a121cfc0137c907b7bfb.
set -g focus-events on

# Dont change tmux's window titles automaticaly
set-option -g status-interval 5
set -w -g automatic-rename off

# Stay in tmux copy mode after drag
set -g @yank_action 'copy-pipe' # or 'copy-pipe-and-cancel' for the default

# #T      = standard window title (last command, see ~/.bash_profile)
# #h      = short hostname
# #S      = session name
# #W      = tmux window name
#
# (Would love to include #(pwd) here as well, but that would only print the
# current working directory relative to the session -- ie. always the starting
# cwd -- which is not very interesting).
set -g set-titles-string "#T : #h > #S > #W"

# Show bells in window titles.
set -g window-status-bell-style fg=red,bold,underscore

set -g @continuum-restore 'off'
# Restore nvim sessions too
set -g @resurrect-strategy-nvim 'session'
set -g @resurrect-capture-pane-contents 'on'

# Plugins only from here on!!
# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-urlview'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'
